# Makefile for building mupdf and related stuff
# Valid option to make:
# CFG=[rel|dbg|rel64|dbg64] - dbg if not given
# ZLIB_DIR=
# JPEG_DIR=
# JBIG2_DIR=
# OPENJPEG_DIR=

# Symbolic names for HOST variable
HOST_LINUX := Linux
HOST_MAC := Darwin
HOST_CYGWIN_6 := CYGWIN_NT-6.0
HOST_CYGWIN_5 := CYGWIN_NT-5.1
HOST_CYGWIN := Cygwin

# HOST can be: Linux, Darwin, CYGWIN_NT-6.0
HOST := $(shell uname -s)

ifeq ($(HOST),$(HOST_CYGWIN_6))
HOST = $(HOST_CYGWIN)
endif

ifeq ($(HOST),$(HOST_CYGWIN_5))
HOST = $(HOST_CYGWIN)
endif

VPATH=draw:fitz:mupdf:fonts:cmaps:apps:$(JBIG2_DIR)

ifneq ($(ZLIB_DIR),)
VPATH+=$(ZLIB_DIR)
endif

ifneq ($(JPEG_DIR),)
VPATH+=$(JPEG_DIR)
endif

ifneq ($(OPENJPEG_DIR),)
VPATH+=$(OPENJPEG_DIR)
endif

# make dbg default target if none provided
ifeq ($(CFG),)
CFG=dbg
endif

INCS = -I fitz -I mupdf -I cmaps -Iapps

ifneq ($(JPEG_DIR),)
INCS += -I $(JPEG_DIR)
endif

ifneq ($(ZLIB_DIR),)
INCS += -I $(ZLIB_DIR)
endif

ifneq ($(JBIG2_DIR),)
INCS += -I $(JBIG2_DIR)
CFLAGS += -DHAVE_JBIG2DEC
endif

ifneq ($(OPENJPEG_DIR),)
INCS += -I $(OPENJPEG_DIR)
CFLAGS += -DHAVE_OPENJPEG
endif

FREETYPE_CFLAGS  = `freetype-config --cflags`
FREETYPE_LDFLAGS = `freetype-config --libs`

# cc-option
# Usage: OP_CFLAGS+=$(call cc-option, -falign-functions=0, -malign-functions=0)

cc-option = $(shell if $(CC) $(OP_CFLAGS) $(1) -S -o /dev/null -xc /dev/null \
              > /dev/null 2>&1; then echo "$(1)"; else echo "$(2)"; fi ;)

CFLAGS += -g -Wall
CFLAGS += $(call cc-option, -Wno-pointer-sign, "")

ifeq ($(CFG),dbg)
CFLAGS += -O0 -fno-inline ${INCS}
endif

ifeq ($(CFG),dbg64)
CFLAGS += -m64 -O0 -fno-inline ${INCS}
endif

ifeq ($(CFG),rel)
CFLAGS += -O3 ${INCS} -DNDEBUG
endif

ifeq ($(CFG),rel64)
CFLAGS += -m64 -O3 ${INCS} -DNDEBUG
endif

CFLAGS += -std=c99 -DHAVE_C99

ZLIB_CFLAGS = $(CFLAGS)
JPEG_CFLAGS = $(CFLAGS)
JBIG2_CFLAGS = $(CFLAGS) -DHAVE_STDINT_H
OPENJPEG_CFLAGS = $(CFLAGS)

#-DHAVE_CONFIG_H

CFLAGS += ${FREETYPE_CFLAGS}

LDFLAGS += ${FREETYPE_LDFLAGS} -lm

#ifeq ($(JPEG_DIR),)
#LDFLAGS += -ljpeg
#endif

ifeq ($(CFG), rel64)
LDFLAGS += -m64
endif

ifeq ($(CFG), dbg64)
LDFLAGS += -m64
endif

ifeq ($(ZLIB_DIR),)
LDFLAGS += -lz
endif

OUTDIR=obj-$(CFG)

VPATH+=$(OUTDIR)

ZLIB_SRC = \
	adler32.c crc32.c inflate.c zutil.c \
	inffast.c inftrees.c deflate.c compress.c \
	trees.c gzlib.c gzread.c gzwrite.c gzclose.c

JPEG_SRC = \
	jaricom.c jcomapi.c jutils.c jerror.c jmemmgr.c \
	jcapimin.c jcapistd.c jcarith.c jctrans.c jcparam.c \
	jdatadst.c jcinit.c jcmaster.c jcmarker.c jcmainct.c \
	jcprepct.c jccoefct.c jccolor.c jcsample.c jchuff.c \
	jcdctmgr.c jfdctfst.c jfdctflt.c jfdctint.c \
	jdapimin.c jdapistd.c jdarith.c jdtrans.c jdatasrc.c \
	jdmaster.c jdinput.c jdmarker.c jdhuff.c jdmainct.c \
	jdcoefct.c jdpostct.c jddctmgr.c jidctfst.c jidctflt.c \
	jidctint.c jdsample.c jdcolor.c jquant1.c jquant2.c \
	jdmerge.c jmemnobs.c

JBIG2_SRC = \
	jbig2.c jbig2_arith.c jbig2_arith_int.c jbig2_arith_iaid.c \
	jbig2_huffman.c jbig2_segment.c jbig2_page.c \
	jbig2_symbol_dict.c jbig2_text.c \
	jbig2_generic.c jbig2_refinement.c jbig2_mmr.c \
	jbig2_image.c jbig2_metadata.c

OPENJPEG_SRC = \
	bio.c cio.c dwt.c event.c image.c \
	j2k.c j2k_lib.c jp2.c jpt.c mct.c \
	mqc.c openjpeg.c pi.c raw.c t1.c \
	t2.c tcd.c tgt.c

FITZ_DRAW_SRC = \
	archport.c blendmodes.c glyphcache.c imagedraw.c imagescale.c imagesmooth.c imageunpack.c \
	meshdraw.c pathfill.c pathscan.c pathstroke.c porterduff.c

FITZ_SRC = \
	base_error.c base_geometry.c base_getopt.c base_memory.c base_string.c \
	base_hash.c base_time.c \
	crypt_aes.c crypt_arc4.c crypt_md5.c \
	filt_basic.c filt_dctd.c filt_faxd.c filt_flate.c \
	filt_jbig2d.c filt_jpxd.c filt_lzwd.c filt_predict.c \
	dev_null.c dev_text.c dev_draw.c dev_bbox.c dev_list.c dev_trace.c \
	obj_array.c obj_dict.c obj_print.c obj_simple.c \
	res_colorspace.c res_font.c res_shade.c res_pixmap.c \
	res_path.c res_text.c \
	stm_buffer.c stm_open.c stm_read.c

ifneq ($(OPENJPEG_DIR),)
FITZ_SRC += filt_jpxd.c
endif

ifneq ($(JBIG2_DIR),)
FITZ_SRC += filt_jbig2d.c
endif

MUPDF_SRC = \
	pdf_annot.c pdf_build.c pdf_cmap.c pdf_cmap_load.c pdf_cmap_parse.c \
	pdf_cmap_table.c pdf_colorspace.c pdf_crypt.c \
	pdf_debug.c pdf_font.c pdf_fontagl.c pdf_fontenc.c pdf_fontfile.c \
	pdf_fontmtx.c pdf_function.c pdf_image.c pdf_interpret.c pdf_lex.c \
	pdf_nametree.c pdf_outline.c pdf_page.c pdf_pagetree.c \
	pdf_parse.c pdf_pattern.c pdf_repair.c pdf_shade.c \
	pdf_store.c pdf_stream.c pdf_type3.c \
	pdf_unicode.c pdf_xobject.c pdf_xref.c

FONTS_SRC = font_misc.c font_mono.c font_serif.c font_sans.c font_cjk.c

CMAPS_SRC = cmap_tounicode.c cmap_cns.c cmap_gb.c cmap_japan.c cmap_korea.c

LIBS_SRC = \
	${CMAPS_SRC} \
	${FONTS_SRC} \
	${FITZ_DRAW_SRC} \
	${FITZ_SRC} \
	${MUPDF_SRC}

JPEG_OBJ = $(patsubst %.c, $(OUTDIR)/JPEG_%.o, ${JPEG_SRC})
JPEG_DEP = $(patsubst %.o, %.d, $(JPEG_OBJ))

ZLIB_OBJ = $(patsubst %.c, $(OUTDIR)/ZLIB_%.o, ${ZLIB_SRC})
ZLIB_DEP = $(patsubst %.o, %.d, $(ZLIB_OBJ))

OPENJPEG_OBJ = $(patsubst %.c, $(OUTDIR)/OPENJPEG_%.o, ${OPENJPEG_SRC})
OPENJPEG_DEP = $(patsubst %.o, %.d, $(OPENJPEG_OBJ))

JBIG2_OBJ = $(patsubst %.c, $(OUTDIR)/JBIG_%.o, ${JBIG2_SRC})
JBIG2_DEP = $(patsubst %.o, %.d, $(JBIG2_OBJ))

LIBS_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${LIBS_SRC})
LIBS_DEP = $(patsubst %.o, %.d, $(LIBS_OBJ))

PDFBENCH_SRC = pdfbench.c
PDFBENCH_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${PDFBENCH_SRC})
PDFBENCH_DEP = $(patsubst %.o, %.d, $(PDFBENCH_OBJ))

PDFCLEAN_SRC = pdfclean.c
PDFCLEAN_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${PDFCLEAN_SRC})
PDFCLEAN_DEP = $(patsubst %.o, %.d, $(PDFCLEAN_OBJ))

PDFDRAW_SRC = pdfdraw.c
PDFDRAW_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${PDFDRAW_SRC})
PDFDRAW_DEP = $(patsubst %.o, %.d, $(PDFDRAW_OBJ))

PDFINFO_SRC = pdfinfo.c
PDFINFO_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${PDFINFO_SRC})
PDFINFO_DEP = $(patsubst %.o, %.d, $(PDFINFO_OBJ))

PDFSHOW_SRC = pdfshow.c
PDFSHOW_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${PDFSHOW_SRC})
PDFSHOW_DEP = $(patsubst %.o, %.d, $(PDFSHOW_OBJ))

PDFEXTRACT_SRC = pdfextract.c
PDFEXTRACT_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${PDFEXTRACT_SRC})
PDFEXTRACT_DEP = $(patsubst %.o, %.d, $(PDFEXTRACT_OBJ))

FONTDUMP_SRC = fontdump.c
FONTDUMP_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${FONTDUMP_SRC})

CMAPDUMP_SRC = cmapdump.c

CMAPDUMP_OBJ = $(patsubst %.c, $(OUTDIR)/FITZ_%.o, ${CMAPDUMP_SRC})

ifneq ($(ZLIB_DIR),)
PDFBENCH_OBJ   += $(ZLIB_OBJ)
PDFCLEAN_OBJ   += $(ZLIB_OBJ)
PDFDRAW_OBJ    += $(ZLIB_OBJ)
PDFINFO_OBJ    += $(ZLIB_OBJ)
PDFSHOW_OBJ    += $(ZLIB_OBJ)
PDFEXTRACT_OBJ += $(ZLIB_OBJ)
endif

ifneq ($(JPEG_DIR),)
PDFBENCH_OBJ   += $(JPEG_OBJ)
PDFCLEAN_OBJ   += $(JPEG_OBJ)
PDFDRAW_OBJ    += $(JPEG_OBJ)
PDFINFO_OBJ    += $(JPEG_OBJ)
PDFSHOW_OBJ    += $(JPEG_OBJ)
PDFEXTRACT_OBJ += $(JPEG_OBJ)
endif

ifneq ($(OPENJPEG_DIR),)
PDFBENCH_OBJ   += $(OPENJPEG_OBJ)
PDFCLEAN_OBJ   += $(OPENJPEG_OBJ)
PDFDRAW_OBJ    += $(OPENJPEG_OBJ)
PDFINFO_OBJ    += $(OPENJPEG_OBJ)
PDFSHOW_OBJ    += $(OPENJPEG_OBJ)
PDFEXTRACT_OBJ += $(OPENJPEG_OBJ)
endif

ifneq ($(JBIG2_DIR),)
PDFBENCH_OBJ   += $(JBIG2_OBJ)
PDFCLEAN_OBJ   += $(JBIG2_OBJ)
PDFDRAW_OBJ    += $(JBIG2_OBJ)
PDFINFO_OBJ    += $(JBIG2_OBJ)
PDFSHOW_OBJ    += $(JBIG2_OBJ)
PDFEXTRACT_OBJ += $(JBIG2_OBJ)
endif

PDFBENCH_APP   = ${OUTDIR}/pdfbench
PDFCLEAN_APP   = ${OUTDIR}/pdfclean
PDFDRAW_APP    = ${OUTDIR}/pdfdraw
PDFINFO_APP    = ${OUTDIR}/pdfinfo
PDFSHOW_APP    = ${OUTDIR}/pdfshow
PDFEXTRACT_APP = ${OUTDIR}/pdfextract
FONTDUMP_APP   = ${OUTDIR}/fontdump
CMAPDUMP_APP   = ${OUTDIR}/cmapdump

all: inform ${OUTDIR} ${CMAPDUMP_APP} ${PDFBENCH_APP} ${PDFCLEAN_APP} ${PDFDRAW_APP} ${PDFINFO_APP}  ${PDFSHOW_APP} ${PDFEXTRACT_APP}

pdfbench: inform ${OUTDIR} ${CMAPDUMP_APP} ${PDFBENCH_APP}

$(OUTDIR):
	@mkdir -p $(OUTDIR)

$(PDFBENCH_APP): ${LIBS_OBJ} ${PDFBENCH_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(PDFCLEAN_APP): ${LIBS_OBJ} ${PDFCLEAN_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(PDFDRAW_APP): ${LIBS_OBJ} ${PDFDRAW_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(PDFINFO_APP): ${LIBS_OBJ} ${PDFINFO_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(PDFSHOW_APP): ${LIBS_OBJ} ${PDFSHOW_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(PDFEXTRACT_APP): ${LIBS_OBJ} ${PDFEXTRACT_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(FONTDUMP_APP): ${FONTDUMP_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(CMAPDUMP_APP): ${CMAPDUMP_OBJ}
	$(CC) -g -o $@ $^ ${LDFLAGS}

$(OUTDIR)/FITZ_%.o: %.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_cmap_tounicode.o: $(OUTDIR)/cmap_tounicode.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_cmap_cns.o: $(OUTDIR)/cmap_cns.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_cmap_gb.o: $(OUTDIR)/cmap_gb.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_cmap_japan.o: $(OUTDIR)/cmap_japan.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_cmap_korea.o: $(OUTDIR)/cmap_korea.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_font_misc.o: $(OUTDIR)/font_misc.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_font_mono.o: $(OUTDIR)/font_mono.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_font_serif.o: $(OUTDIR)/font_serif.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_font_sans.o: $(OUTDIR)/font_sans.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/FITZ_font_cjk.o: $(OUTDIR)/font_cjk.c
	$(CC) -MD -c $(CFLAGS) -o $@ $<

$(OUTDIR)/ZLIB_%.o: %.c
	$(CC) -MD -c $(ZLIB_CFLAGS) -o $@ $<

$(OUTDIR)/JPEG_%.o: %.c
	$(CC) -MD -c $(JPEG_CFLAGS) -o $@ $<

$(OUTDIR)/JBIG_%.o: %.c
	$(CC) -MD -c $(JBIG2_CFLAGS) -o $@ $<

$(OUTDIR)/OPENJPEG_%.o: %.c
	$(CC) -MD -c $(OPENJPEG_CFLAGS) -o $@ $<

$(OUTDIR)/font_misc.c: $(FONTDUMP_APP)
	$(FONTDUMP_APP) $@ fonts/Dingbats.cff fonts/StandardSymL.cff fonts/URWChanceryL-MediItal.cff

$(OUTDIR)/font_mono.c: $(FONTDUMP_APP)
	$(FONTDUMP_APP) $@ fonts/NimbusMonL-Regu.cff fonts/NimbusMonL-ReguObli.cff fonts/NimbusMonL-Bold.cff fonts/NimbusMonL-BoldObli.cff

$(OUTDIR)/font_serif.c: $(FONTDUMP_APP)
	$(FONTDUMP_APP) $@ fonts/NimbusRomNo9L-Regu.cff fonts/NimbusRomNo9L-ReguItal.cff fonts/NimbusRomNo9L-Medi.cff fonts/NimbusRomNo9L-MediItal.cff

$(OUTDIR)/font_sans.c: $(FONTDUMP_APP)
	$(FONTDUMP_APP) $@ fonts/NimbusSanL-Bold.cff fonts/NimbusSanL-BoldItal.cff fonts/NimbusSanL-Regu.cff fonts/NimbusSanL-ReguItal.cff

$(OUTDIR)/font_cjk.c: $(FONTDUMP_APP)
	$(FONTDUMP_APP) $@ fonts/droid/DroidSansFallback.ttf

$(OUTDIR)/cmap_tounicode.c: $(CMAPDUMP_APP)
	$(CMAPDUMP_APP) $(OUTDIR)/cmap_tounicode.c \
	cmaps/Adobe-CNS1-UCS2 \
	cmaps/Adobe-GB1-UCS2 \
	cmaps/Adobe-Japan1-UCS2 \
	cmaps/Adobe-Korea1-UCS2

$(OUTDIR)/cmap_cns.c: $(CMAPDUMP_APP)
	$(CMAPDUMP_APP) $(OUTDIR)/cmap_cns.c \
	cmaps/Adobe-CNS1-0 \
	cmaps/Adobe-CNS1-1 \
	cmaps/Adobe-CNS1-2 \
	cmaps/Adobe-CNS1-3 \
	cmaps/Adobe-CNS1-4 \
	cmaps/Adobe-CNS1-5 \
	cmaps/Adobe-CNS1-6 \
	cmaps/B5-H \
	cmaps/B5-V \
	cmaps/B5pc-H \
	cmaps/B5pc-V \
	cmaps/CNS-EUC-H \
	cmaps/CNS-EUC-V \
	cmaps/CNS1-H \
	cmaps/CNS1-V \
	cmaps/CNS2-H \
	cmaps/CNS2-V \
	cmaps/ETen-B5-H \
	cmaps/ETen-B5-V \
	cmaps/ETenms-B5-H \
	cmaps/ETenms-B5-V \
	cmaps/ETHK-B5-H \
	cmaps/ETHK-B5-V \
	cmaps/HKdla-B5-H \
	cmaps/HKdla-B5-V \
	cmaps/HKdlb-B5-H \
	cmaps/HKdlb-B5-V \
	cmaps/HKgccs-B5-H \
	cmaps/HKgccs-B5-V \
	cmaps/HKm314-B5-H \
	cmaps/HKm314-B5-V \
	cmaps/HKm471-B5-H \
	cmaps/HKm471-B5-V \
	cmaps/HKscs-B5-H \
	cmaps/HKscs-B5-V \
	cmaps/UniCNS-UCS2-H \
	cmaps/UniCNS-UCS2-V \
	cmaps/UniCNS-UTF16-H \
	cmaps/UniCNS-UTF16-V

$(OUTDIR)/cmap_gb.c: $(CMAPDUMP_APP)
	$(CMAPDUMP_APP) $(OUTDIR)/cmap_gb.c \
	cmaps/Adobe-GB1-0 \
	cmaps/Adobe-GB1-1 \
	cmaps/Adobe-GB1-2 \
	cmaps/Adobe-GB1-3 \
	cmaps/Adobe-GB1-4 \
	cmaps/Adobe-GB1-5 \
	cmaps/GB-EUC-H \
	cmaps/GB-EUC-V \
	cmaps/GB-H \
	cmaps/GB-V \
	cmaps/GBK-EUC-H \
	cmaps/GBK-EUC-V \
	cmaps/GBK2K-H \
	cmaps/GBK2K-V \
	cmaps/GBKp-EUC-H \
	cmaps/GBKp-EUC-V \
	cmaps/GBpc-EUC-H \
	cmaps/GBpc-EUC-V \
	cmaps/GBT-EUC-H \
	cmaps/GBT-EUC-V \
	cmaps/GBT-H \
	cmaps/GBT-V \
	cmaps/GBTpc-EUC-H \
	cmaps/GBTpc-EUC-V \
	cmaps/UniGB-UCS2-H \
	cmaps/UniGB-UCS2-V \
	cmaps/UniGB-UTF16-H \
	cmaps/UniGB-UTF16-V

$(OUTDIR)/cmap_japan.c: $(CMAPDUMP_APP)
	$(CMAPDUMP_APP) $(OUTDIR)/cmap_japan.c \
	cmaps/78-EUC-H \
	cmaps/78-EUC-V \
	cmaps/78-H \
	cmaps/78-RKSJ-H \
	cmaps/78-RKSJ-V \
	cmaps/78-V \
	cmaps/78ms-RKSJ-H \
	cmaps/78ms-RKSJ-V \
	cmaps/83pv-RKSJ-H \
	cmaps/90ms-RKSJ-H \
	cmaps/90ms-RKSJ-V \
	cmaps/90msp-RKSJ-H \
	cmaps/90msp-RKSJ-V \
	cmaps/90pv-RKSJ-H \
	cmaps/90pv-RKSJ-V \
	cmaps/Add-H \
	cmaps/Add-RKSJ-H \
	cmaps/Add-RKSJ-V \
	cmaps/Add-V \
	cmaps/Adobe-Japan1-0 \
	cmaps/Adobe-Japan1-1 \
	cmaps/Adobe-Japan1-2 \
	cmaps/Adobe-Japan1-3 \
	cmaps/Adobe-Japan1-4 \
	cmaps/Adobe-Japan1-5 \
	cmaps/Adobe-Japan1-6 \
	cmaps/EUC-H \
	cmaps/EUC-V \
	cmaps/Ext-H \
	cmaps/Ext-RKSJ-H \
	cmaps/Ext-RKSJ-V \
	cmaps/Ext-V \
	cmaps/H \
	cmaps/Hankaku \
	cmaps/Hiragana \
	cmaps/Katakana \
	cmaps/NWP-H \
	cmaps/NWP-V \
	cmaps/RKSJ-H \
	cmaps/RKSJ-V \
	cmaps/Roman \
	cmaps/UniJIS-UCS2-H \
	cmaps/UniJIS-UCS2-HW-H \
	cmaps/UniJIS-UCS2-HW-V \
	cmaps/UniJIS-UCS2-V \
	cmaps/UniJISPro-UCS2-HW-V \
	cmaps/UniJISPro-UCS2-V \
	cmaps/V \
	cmaps/WP-Symbol \
	cmaps/Adobe-Japan2-0 \
	cmaps/Hojo-EUC-H \
	cmaps/Hojo-EUC-V \
	cmaps/Hojo-H \
	cmaps/Hojo-V \
	cmaps/UniHojo-UCS2-H \
	cmaps/UniHojo-UCS2-V \
	cmaps/UniHojo-UTF16-H \
	cmaps/UniHojo-UTF16-V \
	cmaps/UniJIS-UTF16-H \
	cmaps/UniJIS-UTF16-V

$(OUTDIR)/cmap_korea.c: $(CMAPDUMP_APP)
	$(CMAPDUMP_APP) $(OUTDIR)/cmap_korea.c \
	cmaps/Adobe-Korea1-0 \
	cmaps/Adobe-Korea1-1 \
	cmaps/Adobe-Korea1-2 \
	cmaps/KSC-EUC-H \
	cmaps/KSC-EUC-V \
	cmaps/KSC-H \
	cmaps/KSC-Johab-H \
	cmaps/KSC-Johab-V \
	cmaps/KSC-V \
	cmaps/KSCms-UHC-H \
	cmaps/KSCms-UHC-HW-H \
	cmaps/KSCms-UHC-HW-V \
	cmaps/KSCms-UHC-V \
	cmaps/KSCpc-EUC-H \
	cmaps/KSCpc-EUC-V \
	cmaps/UniKS-UCS2-H \
	cmaps/UniKS-UCS2-V \
	cmaps/UniKS-UTF16-H \
	cmaps/UniKS-UTF16-V

fontsources: $(OUTDIR)/font_misc.c $(OUTDIR)/font_mono.c $(OUTDIR)/font_serif.c $(OUTDIR)/font_sans.c $(OUTDIR)/font_cjk.c
	@echo "building font sources"

ifneq ($(ZLIB_DIR),)
-include $(ZLIB_DEP)
endif

ifneq ($(JPEG_DIR),)
-include $(JPEG_DEP)
endif

ifneq ($(OPENJPEG_DIR),)
-include $(OPENJPEG_DEP)
endif

ifneq ($(JBIG2_DIR),)
-include $(JBIG2_DEP)
endif

-include $(PDFCLEAN_DEP)
-include $(PDFBENCH_DEP)

inform:
ifneq ($(CFG),rel)
ifneq ($(CFG),dbg)
ifneq ($(CFG),rel64)
ifneq ($(CFG),dbg64)
	@echo "Invalid configuration: '"$(CFG)"'"
	@echo "Valid configurations: rel, dbg (e.g. make CFG=dbg)"
	@exit 1
endif
endif
endif
endif

clean: inform
	rm -rf obj-$(CFG)

cleanall:
	rm -rf obj-*

force:
